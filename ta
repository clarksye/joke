-- repeat task.wait() until game:IsLoaded() and game.Players.LocalPlayer
-- local Player = game:GetService("Players").LocalPlayer

-- repeat task.wait(1) until Player.Character or Player.CharacterAdded:Wait()

-- local TeleportService = game:GetService("TeleportService")
-- local cachedPlayerData = nil

-- local function getFarm()
--     for _, farm in ipairs(workspace:WaitForChild("Farm"):GetChildren()) do
--         local success, owner = pcall(function()
--             return farm:WaitForChild("Important").Data.Owner.Value
--         end)
--         if success and owner == Player.Name then
--             return farm
--         end
--     end
--     return nil
-- end

-- local success, err = pcall(function()
--     task.wait(3)
--     local DataService = require(game:GetService("ReplicatedStorage").Modules.DataService)
--     if typeof(DataService.GetData) == "function" then
--         local oldGetData = DataService.GetData

--         DataService.GetData = function(self, ...)
--             local data = oldGetData(self, ...)
--             cachedPlayerData = data
--             return data
--         end
--     else
--         warn("DataService.GetData bukan fungsi atau belum tersedia.")
--     end
--     task.wait(1)

--     local farm = getFarm()
--     if not farm then return end

--     local targetPetType = {
-- 		["Disco Bee"] = true,
-- 		["Queen Bee"] = true,
-- 		["Dragonfly"] = true,
-- 		["Raccoon"] = true,
-- 		["Polar Bear"] = true,
-- 		["Red Fox"] = true,
-- 		["Butterfly"] = false,
-- 	}

--     -- for uuid, pet in pairs(cachedPlayerData.PetsData.PetInventory.Data) do
--     --     if pet and pet.PetType and targetPetType[pet.PetType] then return end
--     -- end
    
--     while task.wait(3) do
--         local eggs = 0
--         local ready = 0
--         local isGet = false

--         for i, v in pairs(cachedPlayerData.SavedObjects) do
--             if not v or not v.ObjectType or v.ObjectType ~= "PetEgg" then continue end
--             eggs = eggs + 1
--             if not v.Data or not v.Data.Type then continue end
--             ready = ready + 1

--             if targetPetType[v.Data.Type] then
--                 for _, egg in ipairs(farm:WaitForChild("Important").Objects_Physical:GetChildren()) do
--                     if egg.Name ~= "PetEgg" then continue end
--                     if egg:GetAttribute("OBJECT_UUID") == i then
--                         local args = {"HatchPet", egg}
--                         game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("PetEggService"):FireServer(unpack(args))
--                         task.wait(3)
--                         isGet = true
--                     end
--                 end
--             end
--         end

--         if eggs > 0 and ready > 0 and not isGet then
--             task.wait(3)
--             TeleportService:Teleport(game.PlaceId, Player)

--             while task.wait(10) do
--                 TeleportService:Teleport(game.PlaceId, Player)
--             end
--         end
--     end

-- end)

-- if not success then 
--     warn(err)
-- end
